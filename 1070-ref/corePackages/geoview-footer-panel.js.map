{"version":3,"file":"corePackages/geoview-footer-panel.js","mappings":"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","sources":["webpack://geoview-core/../geoview-footer-panel/src/details-item.tsx","webpack://geoview-core/../geoview-footer-panel/src/legend-item.tsx","webpack://geoview-core/../geoview-footer-panel/src/data-item.tsx","webpack://geoview-core/../geoview-footer-panel/src/index.tsx"],"sourcesContent":["/* eslint-disable react/require-default-props */\nimport { ReactElement } from 'react';\n\nimport {\n  TypeWindow,\n  payloadIsAMapSingleClick,\n  markerDefinitionPayload,\n  payloadIsAllQueriesDone,\n  TypeArrayOfLayerData,\n  getLocalizedValue,\n  Coordinate,\n} from 'geoview-core';\n\ninterface Props {\n  mapId: string;\n}\n\nconst w = window as TypeWindow;\n\n/**\n * Create an element that displays the details component\n *\n * @returns {JSX.Element} created details component\n */\nexport function DetailsItem({ mapId }: Props): JSX.Element {\n  const { cgpv } = w;\n  const { api, react } = cgpv;\n\n  const { useState, useEffect } = react;\n\n  const [details, setDetails] = useState<TypeArrayOfLayerData>([]);\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  const [list, setList] = useState<ReactElement>();\n  const [lngLat, setLngLat] = useState<Coordinate>([]);\n  const [handlerName, setHandlerName] = useState<string | null>(null);\n\n  useEffect(() => {\n    // create the listener to return the details\n    api.event.on(\n      api.eventNames.GET_FEATURE_INFO.ALL_QUERIES_DONE,\n      (payload) => {\n        if (payloadIsAllQueriesDone(payload)) {\n          const { resultSets } = payload;\n          const newDetails: TypeArrayOfLayerData = [];\n          Object.keys(resultSets).forEach((layerPath) => {\n            const layerName = getLocalizedValue(api.map(mapId).layer.registeredLayers[layerPath].layerName, mapId)!;\n            const features = resultSets[layerPath]!;\n            if (features.length > 0) {\n              newDetails.push({ layerPath, layerName, features });\n            }\n          });\n          if (newDetails.length > 0) {\n            setDetails(newDetails);\n          } else {\n            setDetails([]);\n          }\n        } else {\n          setDetails([]);\n        }\n      },\n      `${mapId}/$FeatureInfoLayerSet$`\n    );\n    api.event.on(\n      api.eventNames.MAP.EVENT_MAP_SINGLE_CLICK,\n      (payload) => {\n        if (payloadIsAMapSingleClick(payload)) {\n          const { coordinates } = payload;\n          setHandlerName(payload.handlerName);\n          setLngLat(coordinates.lnglat);\n          api.event.emit(\n            markerDefinitionPayload(api.eventNames.MARKER_ICON.EVENT_MARKER_ICON_SHOW, payload.handlerName, coordinates.lnglat)\n          );\n        } else {\n          setLngLat([]);\n        }\n      },\n      mapId\n    );\n    return () => {\n      api.event.off(api.eventNames.GET_FEATURE_INFO.ALL_QUERIES_DONE, mapId);\n      api.event.off(api.eventNames.MAP.EVENT_MAP_SINGLE_CLICK, mapId);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    setList(api.map(mapId).details.createDetails(mapId, details, { mapId, location: lngLat, handlerName }));\n    setTimeout(() => {\n      api.event.emit(markerDefinitionPayload(api.eventNames.MARKER_ICON.EVENT_MARKER_ICON_SHOW, handlerName, lngLat));\n    }, 1800);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [details, lngLat]);\n\n  return <div>{list}</div>;\n}\n","/* eslint-disable react/require-default-props */\nimport { DetailedReactHTMLElement } from 'react';\nimport { TypeWindow, payloadIsALayerConfig, payloadIsRemoveGeoViewLayer } from 'geoview-core';\n\ninterface Props {\n  mapId: string;\n}\nconst w = window as TypeWindow;\n\n/**\n * Create an element that displays the legend component\n *\n * @returns {JSX.Element} created legend component\n */\nexport function LegendItem({ mapId }: Props): JSX.Element {\n  const { cgpv } = w;\n  const { api, react } = cgpv;\n\n  const { useState, useEffect } = react;\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  const [legend, setLegend] = useState<DetailedReactHTMLElement<{}, HTMLElement>>();\n  const [mapLayers, setMapLayers] = useState<string[]>([]);\n\n  const updateLayers = () => {\n    if (api.map(mapId).layer?.layerOrder !== undefined) setMapLayers([...api.map(mapId).layer.layerOrder].reverse());\n  };\n\n  useEffect(() => {\n    api.event.on(\n      api.eventNames.MAP.EVENT_MAP_LOADED,\n      () => {\n        updateLayers();\n      },\n      mapId\n    );\n    api.event.on(\n      api.eventNames.LAYER.EVENT_REMOVE_LAYER,\n      (payload) => {\n        if (payloadIsRemoveGeoViewLayer(payload)) {\n          setMapLayers((orderedLayers) => orderedLayers.filter((layerId) => layerId !== payload.geoviewLayer.geoviewLayerId));\n        }\n      },\n      mapId\n    );\n    api.event.on(\n      api.eventNames.LAYER.EVENT_ADD_LAYER,\n      (payload) => {\n        if (payloadIsALayerConfig(payload)) {\n          api.event.on(\n            api.eventNames.LAYER.EVENT_LAYER_ADDED,\n            () => {\n              updateLayers();\n              api.event.off(api.eventNames.LAYER.EVENT_LAYER_ADDED, `${mapId}/${payload.layerConfig.geoviewLayerId}`);\n            },\n            `${mapId}/${payload.layerConfig.geoviewLayerId}`\n          );\n        }\n      },\n      mapId\n    );\n    return () => {\n      api.event.off(api.eventNames.MAP.EVENT_MAP_LOADED, mapId);\n      api.event.off(api.eventNames.LAYER.EVENT_ADD_LAYER, mapId);\n      api.event.off(api.eventNames.LAYER.EVENT_REMOVE_LAYER, mapId);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    setLegend(api.map(mapId).legend.createLegend({ layerIds: mapLayers, isRemoveable: false, canSetOpacity: true, canZoomTo: true }));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [mapLayers]);\n\n  return <div>{legend}</div>;\n}\n","/* eslint-disable react/require-default-props */\nimport { TypeWindow, getLocalizedValue, TypeTabs } from 'geoview-core';\n\ninterface Props {\n  mapId: string;\n}\nconst w = window as TypeWindow;\n\n/**\n * Create an element that displays the data grid footer component\n *\n * @returns {JSX.Element} created data grid footer component\n */\nexport function DataItem({ mapId }: Props): JSX.Element {\n  const { cgpv } = w;\n  const { api, ui, react } = cgpv;\n  const { Tabs } = ui.elements;\n\n  const { useState, useEffect } = react;\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  const [dataLayers, setDataLayers] = useState<string[]>([]);\n\n  useEffect(() => {\n    setDataLayers(Object.keys(api.map(mapId!).layer.geoviewLayers));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [api, mapId]);\n\n  setTimeout(() => {\n    dataLayers.forEach((layerId) => {\n      const layerSelection = document.getElementById(`${layerId}-groupLayerSelection`);\n      if (layerSelection) {\n        (layerSelection as HTMLSelectElement).addEventListener('change', function onChange(this) {\n          const { selectedIndex } = this;\n          const datagridTables = document.getElementsByClassName(`${layerId}-layer-datagrid-table`);\n          if (datagridTables.length > 0) {\n            for (let i = 0; i < datagridTables.length; i++) {\n              (datagridTables[i] as HTMLDivElement).setAttribute('style', `display:${i !== selectedIndex ? 'none' : 'block'}`);\n            }\n          }\n        });\n      }\n    });\n  }, 2000);\n  return (\n    <Tabs\n      tabsProps={{\n        variant: 'scrollable',\n      }}\n      tabs={dataLayers.map((layerId, index): TypeTabs => {\n        const geoviewLayerInstance = api.map(mapId).layer.geoviewLayers[layerId];\n        const labelValue = getLocalizedValue(geoviewLayerInstance.geoviewLayerName, mapId);\n        return {\n          value: index,\n          label: labelValue !== undefined ? labelValue : `data-${index}`,\n          content: () => api.map(mapId).dataGrid.createDataGrid({ layerId }),\n        };\n      })}\n    />\n  );\n}\n","import {\n  Cast,\n  AbstractPlugin,\n  TypePluginOptions,\n  TypeButtonPanel,\n  TypeWindow,\n  toJsonObject,\n  TypeJsonObject,\n  AnySchemaObject,\n  payloadIsAllQueriesDone,\n  TypeArrayOfFeatureInfoEntries,\n} from 'geoview-core';\n\nimport schema from '../schema.json';\nimport defaultConfig from '../default-config-footer-panel.json';\nimport { DetailsItem } from './details-item';\nimport { LegendItem } from './legend-item';\nimport { DataItem } from './data-item';\n\nconst w = window as TypeWindow;\n\ntype CustomTabs = {\n  title: string;\n  contentHTML: string;\n};\n\n/**\n * Create a class for the plugin instance\n */\nclass FooterPanelPlugin extends AbstractPlugin {\n  // store the created button panel object\n  buttonPanel: TypeButtonPanel | null;\n\n  constructor(pluginId: string, props: TypePluginOptions) {\n    super(pluginId, props);\n    this.buttonPanel = null;\n  }\n\n  /**\n   * Return the package schema\n   *\n   * @returns {AnySchemaObject} the package schema\n   */\n  schema = (): AnySchemaObject => schema;\n\n  /**\n   * Return the default config for this package\n   *\n   * @returns {TypeJsonObject} the default config\n   */\n  defaultConfig = (): TypeJsonObject => toJsonObject(defaultConfig);\n\n  /**\n   * translations object to inject to the viewer translations\n   */\n  translations = toJsonObject({\n    en: {\n      legend: 'Legend',\n      details: 'Details',\n      dataGrid: 'Data',\n    },\n    fr: {\n      legend: 'Légende',\n      details: 'Détails',\n      dataGrid: 'Données',\n    },\n  });\n\n  /**\n   * Added function called after the plugin has been initialized\n   */\n  added = (): void => {\n    const { configObj, pluginProps } = this;\n\n    const { mapId } = pluginProps;\n\n    // access the cgpv object from the window object\n    const { cgpv } = w;\n\n    if (cgpv) {\n      // access the api calls\n      const { api } = cgpv;\n      const { displayLanguage, footerTabs, map } = api.map(mapId);\n\n      const mapContainer = map.getTargetElement().parentElement;\n      // Set size of map container based on whether footer-panel is collapsed or not\n      if (mapContainer) {\n        if (configObj?.collapsed === false) {\n          mapContainer.style.height = 'calc( 100% - 300px )';\n        } else {\n          mapContainer.style.height = 'calc( 100% - 55px )';\n        }\n      }\n\n      const defaultTabs = configObj?.tabs.defaultTabs as Array<string>;\n      let tabsCounter = 0;\n\n      if (defaultTabs.includes('legend')) {\n        // create new tab and add the LegendComponent to the footer tab\n        footerTabs.createFooterTab({\n          value: tabsCounter,\n          label: this.translations[displayLanguage].legend as string,\n          content: () => <LegendItem mapId={mapId} />,\n        });\n        tabsCounter++;\n      }\n\n      // create the listener to return the details\n      if (defaultTabs.includes('details')) {\n        // create new tab and add the DetailComponent to the footer tab\n        const detailsTabValue = tabsCounter;\n        footerTabs.createFooterTab({\n          value: detailsTabValue,\n          label: this.translations[displayLanguage].details as string,\n          content: () => <DetailsItem mapId={mapId} />,\n        });\n        tabsCounter++;\n        // select the details tab when map click queries are done\n        api.event.on(\n          api.eventNames.GET_FEATURE_INFO.ALL_QUERIES_DONE,\n          (payload) => {\n            if (payloadIsAllQueriesDone(payload)) {\n              const { resultSets } = payload;\n              let features: TypeArrayOfFeatureInfoEntries = [];\n              Object.keys(resultSets).forEach((layerPath) => {\n                features = features.concat(resultSets[layerPath]!);\n              });\n              if (features.length > 0) {\n                footerTabs.selectFooterTab(detailsTabValue);\n              }\n            }\n          },\n          `${mapId}/$FeatureInfoLayerSet$`\n        );\n      }\n\n      if (defaultTabs.includes('data-grid')) {\n        /// create new tab and add the DataGridComponent to the footer tab\n        footerTabs.createFooterTab({\n          value: tabsCounter,\n          label: this.translations[displayLanguage].dataGrid as string,\n          content: () => <DataItem mapId={mapId} />,\n        });\n        tabsCounter++;\n      }\n\n      // TODO add custom detail reusable component when done\n\n      const customTabs = configObj?.tabs.customTabs as Array<string>;\n      for (let i = 0; i < customTabs.length; i++) {\n        const tab = customTabs[i] as unknown as CustomTabs;\n\n        footerTabs.createFooterTab({\n          value: tabsCounter,\n          label: tab.title,\n          content: tab.contentHTML,\n        });\n        tabsCounter++;\n      }\n    }\n  };\n\n  /**\n   * Function called when the plugin is removed, used for clean up\n   */\n  removed(): void {\n    // const { mapId } = this.pluginProps;\n\n    // access the cgpv object from the window object\n    const { cgpv } = w;\n\n    if (cgpv) {\n      // access the api calls\n      // const { api } = cgpv;\n      // TODO: Enable the footer tabs removal\n    }\n  }\n}\n\nexport default FooterPanelPlugin;\n\nw.plugins = w.plugins || {};\nw.plugins['footer-panel'] = Cast<AbstractPlugin>(FooterPanelPlugin);\n"],"names":["w","window","DetailsItem","_ref","mapId","cgpv","api","react","useState","useEffect","_useState","_useState2","_slicedToArray","details","setDetails","_useState3","_useState4","list","setList","_useState5","_useState6","lngLat","setLngLat","_useState7","_useState8","handlerName","setHandlerName","event","on","eventNames","GET_FEATURE_INFO","ALL_QUERIES_DONE","payload","payloadIsAllQueriesDone","resultSets","newDetails","Object","keys","forEach","layerPath","layerName","getLocalizedValue","map","layer","registeredLayers","features","length","push","concat","MAP","EVENT_MAP_SINGLE_CLICK","payloadIsAMapSingleClick","coordinates","lnglat","emit","markerDefinitionPayload","MARKER_ICON","EVENT_MARKER_ICON_SHOW","off","createDetails","location","setTimeout","_jsx","children","LegendItem","legend","setLegend","mapLayers","setMapLayers","updateLayers","_api$map$layer","undefined","layerOrder","_toConsumableArray","reverse","EVENT_MAP_LOADED","LAYER","EVENT_REMOVE_LAYER","payloadIsRemoveGeoViewLayer","orderedLayers","filter","layerId","geoviewLayer","geoviewLayerId","EVENT_ADD_LAYER","payloadIsALayerConfig","EVENT_LAYER_ADDED","layerConfig","createLegend","layerIds","isRemoveable","canSetOpacity","canZoomTo","DataItem","ui","Tabs","elements","dataLayers","setDataLayers","geoviewLayers","layerSelection","document","getElementById","addEventListener","selectedIndex","this","datagridTables","getElementsByClassName","i","setAttribute","tabsProps","variant","tabs","index","geoviewLayerInstance","labelValue","geoviewLayerName","value","label","content","dataGrid","createDataGrid","FooterPanelPlugin","_AbstractPlugin","_inherits","_super","_createSuper","pluginId","props","_this","_classCallCheck","call","_defineProperty","_assertThisInitialized","schema","toJsonObject","defaultConfig","en","fr","_assertThisInitialize","configObj","pluginProps","_api$map","displayLanguage","footerTabs","mapContainer","getTargetElement","parentElement","collapsed","style","height","defaultTabs","tabsCounter","includes","createFooterTab","translations","detailsTabValue","selectFooterTab","customTabs","tab","title","contentHTML","buttonPanel","_createClass","key","AbstractPlugin","plugins","Cast"],"sourceRoot":""}