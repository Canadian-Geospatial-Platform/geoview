{
    "$schema": "https://json-schema.org/draft-07/schema#",
    "title": "GeoView Core Config Schema",
    "type": "object",
    "version": 1.0,
    "comments": "Configuration for GeoView core packages, each packages manages it own schema.",
    "additionalProperties": false,

    "definitions": {
        "detailsLayerSettings": {
            "type": "object",
            "properties": {
                "parser": {
                    "type": "string",
                    "description": "A path to a javascript file with a function for parsing the layers identify output. Only needed if a custom template is being used."
                },
                "template": {
                    "type": "string",
                    "description": "A path to an html template that will override default identify output."
                }
            },
            "required": ["template"],
            "additionalProperties": false
        },

        "initialLayerSettings": {
            "type": "object",
            "properties": {
                "opacity": {
                    "type": "number",
                    "default": 1,
                    "description": "Initial opacity setting."
                },
                "visibility": {
                    "type": "boolean",
                    "default": true,
                    "description": "Initial visibility setting."
                },
                "boundingBox": {
                    "type": "boolean",
                    "default": false,
                    "description": "Display bounding box."
                },
                "query": {
                    "type": "boolean",
                    "default": true,
                    "description": "Allow querying."
                }
            },
            "additionalProperties": false
        },

        "basicLayer": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The id of the layer for referencing within the viewer (does not relate directly to any external service)."
                },
                "name": {
                    "type": "string",
                    "description": "The display name of the layer. If it is not present the viewer will make an attempt to scrape this information."
                },
                "url": {
                    "type": "string",
                    "description": "The service endpoint of the layer. It should match the type provided in layerType."
                },
                "layerType": {
                    "type": "string",
                    "enum": ["ogcWms", "ogcWfs", "geoJson", "csv", "esriDynamic", "esriFeature", "esriImage", "esriTile"]
                }
            },
            "required": ["id", "layerType", "url"]
        },
        "basicLayerNode": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The id of the layer for referencing within the viewer (does not relate directly to any external service)."
                },
                "name": {
                    "type": "string",
                    "description": "The display name of the layer. If it is not present the viewer will make an attempt to scrape this information."
                },
                "url": {
                    "type": "string",
                    "description": "The service endpoint of the layer. It should match the type provided in layerType."
                },
                "layerType": {
                    "type": "string",
                    "enum": ["esriImage", "esriTile"]
                },
                "metadataUrl": {
                    "type": "string",
                    "default": null,
                    "description": "The metadata url of the layer service."
                },
                "state": {
                    "$ref": "#/definitions/initialLayerSettings"
                },
                "details": {
                    "$ref": "#/definitions/detailsLayerSettings"
                }
            },
            "required": ["id", "layerType", "url"],
            "additionalProperties": false
        },
        "featureLayerNode": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The id of the layer for referencing within the viewer (does not relate directly to any external service)."
                },
                "name": {
                    "type": "string",
                    "description": "The display name of the layer. If it is not present the viewer will make an attempt to scrape this information."
                },
                "url": {
                    "type": "string",
                    "description": "The service endpoint of the layer.  It should match the type provided in layerType."
                },
                "layerType": {
                    "type": "string",
                    "enum": ["esriFeature"]
                },
                "metadataUrl": {
                    "type": "string",
                    "default": null,
                    "description": "The metadata url of the layer service."
                },
                "nameField": {
                    "type": "string",
                    "description": "The display field of the layer. If it is not present the viewer will make an attempt to scrape this information."
                },
                "tooltipField": {
                    "type": "string",
                    "description": "The field to be used for tooltips. If it is not present the viewer will use nameField (if provided)."
                },
                "outfields": {
                    "type": "string",
                    "default": "*",
                    "description": "A comma separated list of attribute names that should be requested on query."
                },
                "state": {
                    "$ref": "#/definitions/initialLayerSettings"
                },
                "details": {
                    "$ref": "#/definitions/detailsLayerSettings"
                }
            },
            "required": ["id", "layerType", "url"],
            "additionalProperties": false
        },
        "dynamicLayerNode": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The id of the layer for referencing within the viewer (does not relate directly to any external service)."
                },
                "name": {
                    "type": "string",
                    "description": "The display name of the layer.  If it is not present the viewer will make an attempt to scrape this information."
                },
                "url": {
                    "type": "string",
                    "description": "The service endpoint of the layer.  It should match the type provided in layerType."
                },
                "layerType": {
                    "type": "string",
                    "enum": ["esriDynamic"]
                },
                "metadataUrl": {
                    "type": "string",
                    "default": null,
                    "description": "The metadata url of the layer service."
                },
                "layerEntries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dynamicLayerEntryNode"
                    },
                    "minItems": 1
                },
                "state": {
                    "$ref": "#/definitions/initialLayerSettings"
                },
                "details": {
                    "$ref": "#/definitions/detailsLayerSettings"
                }
            },
            "required": ["id", "layerType", "layerEntries", "url"],
            "additionalProperties": false
        },
        "dynamicLayerEntryNode": {
            "type": "object",
            "properties": {
                "index": {
                    "type": "number",
                    "description": "The index of the layer in the map service."
                },
                "name": {
                    "type": "string",
                    "description": "A descriptive name for the layer, can override the name coming from the service."
                },
                "nameField": {
                    "type": "string",
                    "description": "The display field of the layer.  If it is not present the viewer will make an attempt to scrape this information."
                },
                "outfields": {
                    "type": "string",
                    "default": "*",
                    "description": "A comma separated list of attribute names that should be requested on query."
                },
                "state": {
                    "$ref": "#/definitions/initialLayerSettings"
                }
            },
            "required": ["index"],
            "additionalProperties": false
        },
        "geoJsonLayerNode": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The id of the layer for referencing within the viewer (does not relate directly to any external service)."
                },
                "name": {
                    "type": "string",
                    "description": "The display name of the layer."
                },
                "url": {
                    "type": "string",
                    "description": "The url path to the file. It should match the type provided in layerType."
                },
                "layerType": {
                    "type": "string",
                    "enum": ["geojson"]
                },
                "nameField": {
                    "type": "string",
                    "description": "The display field of the layer. If it is not present the viewer will make an attempt to find the first valid field."
                },
                "tooltipField": {
                    "type": "string",
                    "description": "The field to be used for tooltips.  If it is not present the viewer will use nameField (if provided)."
                },
                "renderer": {
                    "type": "object",
                    "additionalProperties": true,
                    "description": "Optional renderer object to apply to the layer. Follows Leaflet Path json convention."
                },
                "state": {
                    "$ref": "#/definitions/initialLayerSettings"
                },
                "details": {
                    "$ref": "#/definitions/detailsLayerSettings"
                }
            },
            "required": ["id", "name", "layerType", "url"],
            "additionalProperties": false
        },
        "wfsLayerNode": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The id of the layer for referencing within the viewer (does not relate directly to any external service)."
                },
                "name": {
                    "type": "string",
                    "description": "The display name of the layer. If it is not present the viewer will make an attempt to scrape this information."
                },
                "url": {
                    "type": "string",
                    "description": "The service endpoint of the layer.  It should match the type provided in layerType."
                },
                "layerType": {
                    "type": "string",
                    "enum": ["ogcWfs"]
                },
                "nameField": {
                    "type": "string",
                    "description": "The display field of the layer. If it is not present the viewer will make an attempt to scrape this information."
                },
                "tooltipField": {
                    "type": "string",
                    "description": "The field to be used for tooltips.  If it is not present the viewer will use nameField (if provided)."
                },
                "renderer": {
                    "type": "object",
                    "additionalProperties": true,
                    "description": "Optional renderer object to apply to the layer. Follows Leaflet Path json convention."
                },
                "state": {
                    "$ref": "#/definitions/initialLayerSettings"
                },
                "details": {
                    "$ref": "#/definitions/detailsLayerSettings"
                }
            },
            "required": ["id", "layerType", "url"],
            "additionalProperties": false
        },
        "wmsLayerNode": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The id of the layer for referencing within the viewer (does not relate directly to any external service)."
                },
                "name": {
                    "type": "string",
                    "description": "The display name of the layer.  If it is not present the viewer will make an attempt to scrape this information."
                },
                "url": {
                    "type": "string",
                    "description": "The service endpoint of the layer.  It should match the type provided in layerType."
                },
                "layerEntries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/wmsLayerEntryNode"
                    },
                    "minItems": 1
                },
                "layerType": {
                    "type": "string",
                    "enum": ["ogcWms"]
                },
                "metadataUrl": {
                    "type": "string",
                    "default": null,
                    "description": "The metadata url of the layer service."
                },
                "state": {
                    "$ref": "#/definitions/initialLayerSettings"
                },
                "details": {
                    "$ref": "#/definitions/detailsLayerSettings"
                }
            },
            "required": ["id", "layerType", "layerEntries", "url"],
            "additionalProperties": false
        },
        "wmsLayerEntryNode": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The id of the layer entry in the WMS."
                },
                "name": {
                    "type": "string",
                    "description": "A descriptive name for the layer. To be used in the legend."
                },
                "state": {
                    "$ref": "#/definitions/initialLayerSettings"
                }
            },
            "required": ["id"],
            "additionalProperties": false
        },

        "layerNode": {
            "oneOf": [{
                    "$ref": "#/definitions/basicLayerNode"
                },
                {
                    "$ref": "#/definitions/featureLayerNode"
                },
                {
                    "$ref": "#/definitions/dynamicLayerNode"
                },
                {
                    "$ref": "#/definitions/geoJsonLayerNode"
                },
                {
                    "$ref": "#/definitions/wfsLayerNode"
                },
                {
                    "$ref": "#/definitions/wmsLayerNode"
                }
            ]
        },

        "layerList": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/layerNode"
            },
            "minItems": 0
        }
    },

    "properties": {
        "map": {
            "type": "object",
            "properties": {
                "interaction": {
                    "type": "string",
                    "enum": ["static", "dynamic"],
                    "default": "dynamic",
                    "description": "If map is dynamic (pan/zoom) or static to act as a thumbnail."
                },
                "projection": {
                    "type": "integer",
                    "enum": [3978, 3857],
                    "default": 3978,
                    "description": "Spatial Reference EPSG code supported (https://epsg.io/). We support Web Mercator and Lambert Conical Conform Canada."
                },
                "initialView": {
                    "type": "object",
                    "properties": {
                        "zoom": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 28,
                            "default": 12,
                            "description": "Initial map zoom level. Zoom level are define by the basemap zoom levels."
                        },
                        "center": {
                            "type": "array",
                            "prefixItems": [
                                {
                                    "type": "integer",
                                    "minimum": -80,
                                    "maximum": 80,
                                    "default": 45,
                                    "description": "Initial latitude value for map center."
                                }, {
                                    "type": "integer",
                                    "minimum": -160,
                                    "maximum": 160,
                                    "default": 75,
                                    "description": "Initial longitude value for map center."
                                }
                            ]
                        }
                    },
                    "required": ["zoom", "center"]
                },
                "basemapOptions": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string",
                            "enum": ["transport", "shaded", "simple"],
                            "default": "transport",
                            "description": "Id of the basemap to use."
                        },
                        "shaded": {
                            "type": "boolean",
                            "default": true,
                            "description": "Enable or disable shaded basemap (if basemap id is set to shaded then this should be false)."
                        },
                        "labeled": {
                            "type": "boolean",
                            "default": true,
                            "description": "Enable or disable basemap labels"
                        }
                    },
                    "required": ["id", "shaded", "labeled"]
                },
                "layers": {
                    "$ref": "#/definitions/layerList",
                    "description": "Layer list in the order which they should be added to the map."
                }
            },
            "required": ["interaction", "projection", "initialView", "basemapOptions"]
        },

        "legendPanel": {
            "type": "object",
            "description": "Specifies options for the legend panel.",
            "properties": {
                "reorderable": {
                    "type": "boolean",
                    "default": true,
                    "description": "Specifies if the items in the legend can be reordered."
                },
                "allowImport": {
                    "type": "boolean",
                    "default": true,
                    "description": "Specifies if the user-added layers are allowed."
                },
                "isOpen": {
                    "type": "object",
                    "description": "Specifies whether the legend is opened by default on initial loading of the map for small, medium, and large viewports.",
                    "properties": {
                        "large": {
                            "type": "boolean",
                            "default": false,
                            "description": "Whether the legend is opened by default on initial loading of the map for large viewports."
                        },
                        "medium": {
                            "type": "boolean",
                            "default": false,
                            "description": "Whether the legend is opened by default on initial loading of the map for medium viewports."
                        },
                        "small": {
                            "type": "boolean",
                            "default": false,
                            "description": "Whether the legend is opened by default on initial loading of the map for small viewports."
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": false
        },
        "searchService": {
            "type": "object",
            "description": "Search properties including ability to disable certain types of searches (NTS, FSA, SCALE, and/or LAT/LNG), modify default GeoSearch settings (filtering, sorting, etc.).",
            "properties": {
                "settings": {
                    "type": "object",
                    "description": "Configuration settings related to GeoSearch",
                    "properties": {
                        "categories": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "default": [],
                            "description": "Filter the search results based on the type of the geographical names. Allowed values can be found here (if using the Canadian GeoNames Search Service API): http://geogratis.gc.ca/services/geoname/en/codes/concise."
                        },
                        "maxResults": {
                            "type": "number",
                            "default": 100,
                            "description": "The maximum number of results to return per request. The Canadian GeoNames Search Service API has a 1000 search limit which will be used as an upper limit of results returned unless another service is being used with a higher limit. The default is 100 results."
                        }
                    },
                    "additionalProperties": false
                },
                "disabledSearches": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": ["NTS", "FSA", "LAT/LNG", "SCALE"]
                    },
                    "minItems": 0,
                    "uniqueItems": true,
                    "description": "Disable specific types of searches including NTS, FSA, SCALE, or LAT/LNG"
                }
            },
            "additionalProperties": false
        },
        "aboutPanel": {
            "type": "string",
            "description": "The content of the about section."
        },

        "packages": {
            "type": "array",
            "uniqueItems": true,
            "items": {
                "type": "string",
                "enum": ["appbar", "navbar", "overview-map", "basemap-switcher", "layers", "details", "about", "geolocator"]
            },
            "default": ["appbar", "navbar", "overview-map", "basemap-switcher", "layers", "details"],
            "description": "Core components to initialize on viewer load.",
            "minItems": 0
        },
        "plugins": {
            "type": "string",
            "description": "List of external plugins to initialize on viewer load separated by ;."
        },

        "language": {
            "type": "string",
            "enum": ["en-CA", "fr-CA"],
            "description": "ISO 639-1 code indicating the language of strings in the schema file."
        },
        "version": {
            "type": "string",
            "enum": ["1.0"],
            "description": "The schema version used to validate the configuration file. The schema should enumerate the list of versions accepted by this version of the viewer."
        }
    },
    "required": ["map", "language"]
}