import { TypeFillStyle } from '../map/map-schema-types';

export const defaultColor = [
  '#800000',
  '#008000',
  '#000080',
  '#808000',
  '#800080',
  '#008080',
  '#ff0000',
  '#00ff00',
  '#0000ff',
  '#ffff00',
  '#ff00ff',
  '#00ffff',
  '#ffa500',
  '#faebd7',
  '#7fffd4',
  '#ffe4c4',
  '#deb887',
  '#d2691e',
  '#ff7f50',
  '#6495ed',
  '#fff8dc',
  '#dc143c',
  '#b8860b',
  '#a9a9a9',
  '#006400',
  '#bdb76b',
  '#8b008b',
  '#556b2f',
  '#ff8c00',
  '#9932cc',
  '#8b0000',
  '#e9967a',
  '#8fbc8f',
  '#483d8b',
  '#2f4f4f',
  '#00ced1',
  '#9400d3',
  '#ff1493',
  '#00bfff',
  '#696969',
  '#1e90ff',
  '#b22222',
  '#fffaf0',
  '#228b22',
  '#dcdcdc',
  '#ffd700',
  '#adff2f',
  '#ff69b4',
  '#cd5c5c',
  '#4b0082',
  '#f0e68c',
  '#e6e6fa',
  '#7cfc00',
  '#add8e6',
  '#f08080',
  '#e0ffff',
  '#90ee90',
  '#ffb6c1',
  '#20b2aa',
  '#87cefa',
  '#ba55d3',
  '#9370db',
  '#3cb371',
  '#ffdead',
];

export type FillPaternLine = { moveTo: [number, number]; lineTo: [number, number] };

export type FillPaternSettings = Record<TypeFillStyle, FillPaternLine[] | []>;

export enum NodeType {
  unprocessedNode,
  keyword,
  variable,
  string,
  number,
  unary,
  binary,
  group,
}
export type FilterNodeType = { nodeType: NodeType; nodeValue: string | number | boolean | string[] | number[] };
export type FilterNodeArrayType = FilterNodeType[];
export const binaryKeywors = ['in', 'like', 'and', 'or', '<', '<=', '=', '!=', '>', '>=', '||', '/', '*', ','];
export const unaryKeywords = ['not'];
export const groupKeywords = ['(', ')'];
export const operatorPriority = [
  { key: 'u+', priority: 15 },
  { key: 'u-', priority: 15 },
  { key: '*', priority: 14 },
  { key: '/', priority: 14 },
  { key: '+', priority: 13 },
  { key: '-', priority: 13 },
  { key: '||', priority: 13 },
  { key: ',', priority: 12 },
  { key: '=', priority: 11 },
  { key: '<', priority: 10 },
  { key: '>', priority: 9 },
  { key: '<=', priority: 8 },
  { key: '>=', priority: 7 },
  { key: '!=', priority: 6 },
  { key: 'is null', priority: 5 },
  { key: 'like', priority: 4 },
  { key: 'in', priority: 3 },
  { key: 'not', priority: 2 },
  { key: 'and', priority: 1 },
  { key: 'or', priority: 0 },
];
